name: Publishing new WHMCS release

on:
  push:
    # branches: [ master, main ]
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      # Gget github contect
      - name: Getting Github Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      # Begin composer stuff
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-node-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies without dev
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-suggest --no-dev


      # Begin npm stuff
      - name: Setup node
        uses: actions/setup-node@v4

      - name: Begin node compiling process
        run: npm run build-prod

      # Begin packaging process
      - name: Create Release Folder
        run: |
          rsync -arv \
          --exclude '.git/' \
          --exclude '.github/' \
          --exclude 'node_modules/' \
          --exclude '.gitignore' \
          --exclude 'composer.*' \
          --exclude 'gulpfile.js' \
          --exclude 'package.json' \
          --exclude 'package-lock.json' \
          --exclude 'README.md' \
          . ./moloni

      - name: Zip realease folder
        run: zip -r moloni.zip ./moloni

      - name: Reading Version
        uses: moloni-pt/github-version-creator@master
        with:
          method: composer.json
        id: package-version

      - name: Create new release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package-version.outputs.version }}
          release_name: ${{ steps.package-version.outputs.version }}
          body: ${{ steps.package-version.outputs.description }}
          draft: false
          prerelease: false

      - name: Upload release zip
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./moloni.zip
          asset_name: moloni.zip
          asset_content_type: application/zip
